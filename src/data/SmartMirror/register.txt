import cv2
import os

cam = cv2.VideoCapture(0)
cam.set(3, 640) # set video width
cam.set(4, 480) # set video height
face_detector = cv2.CascadeClassifier("/home/pi/opencv/opencv-4.1.2/data/haarcascades/haarcascade_frontalface_default.xml")
font = cv2.FONT_HERSHEY_SIMPLEX

def in_name() :
    face_id = input('\n enter user id end press <return> ==>  ')
    direc = "/home/pi/PYTHON/FaceDetect/dataset/{0}".format(face_id)
    os.mkdir(direc)
    return face_id

# For each person, enter one numeric face id
#face_id = input('\n enter user id end press <return> ==>  ')
#print("\n [INFO] Initializing face capture. Look the camera and wait ...")
#direc = "/home/pi/PYTHON/FaceDetect/dataset/{0}".format(face_id)
#os.mkdir(direc)
face_id = in_name()

# Initialize individual sampling face count
count = 0
while(True):
    ret, img = cam.read()
    #img = cv2.flip(img, -1) # flip video image vertically
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_detector.detectMultiScale(gray, 1.3, 5)
    for (x,y,w,h) in faces:
        cv2.rectangle(img, (x,y), (x+w,y+h), (255,0,0), 2)     
        count += 1
        # Save the captured image into the datasets folder
        cv2.imwrite("/home/pi/PYTHON/FaceDetect/dataset/{0}/User.".format(face_id) + str(1) + '.' + str(count) + ".jpg", gray[y:y+h,x:x+w])
        cv2.putText(img, str(face_id)+ "is registering...({0}/300)".format(count), (x+5,y-5), font, 0.5, (255,255,255), 2)
        cv2.imshow('image', img)
    k = cv2.waitKey(100) & 0xff # Press 'ESC' for exiting video
    if k == 27:
        break
    elif count >= 300: # Take 30 face sample and stop video
         break
# Do a bit of cleanup
print("\n [INFO] Exiting Program and cleanup stuff")
cam.release()
cv2.destroyAllWindows()

